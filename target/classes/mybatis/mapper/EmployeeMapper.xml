<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.softtech.mappers.EmployeeMapper">

    <resultMap id="EmployeeResultMap" type="com.softtech.entity.Employee">
        <id column="employeeID" property="employeeID" />
        <result column="employeeName" property="employeeName" />
        <result column="password" property="password" />
        <result column="status" property="status" />
        <result column="sex" property="sex" />
        <result column="epType" property="epType" />
        <result column="birthday" property="birthday" />
        <result column="age" property="age" />
        <result column="joinedDate" property="joinedDate" />
        <result column="joinedTime" property="joinedTime" />
        <result column="postCode" property="postCode" />
        <result column="address" property="address" />
        <result column="phoneNumber" property="phoneNumber" />
        <result column="authority" property="authority" />
        <result column="mailAdress" property="mailAdress" />
        <result column="insertDate" property="insertDate" />
        <result column="updateDate" property="updateDate" />
    </resultMap>

    <select id="findAll" resultMap="EmployeeResultMap">
        SELECT * FROM employee
    </select>

    <select id="findById" parameterType="String" resultMap="EmployeeResultMap">
        SELECT * FROM employee WHERE employeeID = #{employeeID}
    </select>

    <select id="queryEmployee" resultMap="EmployeeResultMap">
        SELECT * FROM employee
    </select>
    
    <select id="findEmployeeIdByEmail" parameterType="String" resultType="String">
    SELECT employeeID FROM employee WHERE mailAdress = #{email}
	</select>
	
	<select id="queryEmployeeAndFileStatus" resultType="map">
    SELECT 
        e.employeeName, 
        arf.fileULStatus
    FROM 
        employee e
        LEFT JOIN adjustmentRequestFiles arf ON e.employeeID = arf.employeeID
    WHERE 
        arf.fileYear = #{currentYear} 
        AND arf.fileULStatus = '1'
	</select>
	
	<select id="queryEmployeeAndAdjustmentStatuses" resultType="map">
        SELECT 
            e.employeeName, 
            ad.uploadStatus,
            ad.adjustmentStatus
        FROM 
            employee e
            LEFT JOIN adjustmentDetail ad ON e.employeeID = ad.employeeID
        WHERE 
            ad.year = #{currentYear}
    </select>
	

    <insert id="insert" parameterType="com.softtech.entity.Employee">
        INSERT INTO employee (employeeID, employeeName, password, status, sex, epType, birthday, age, joinedDate, joinedTime, postCode, address, phoneNumber, authority, mailAdress, insertDate, updateDate)
        VALUES (#{employeeID}, #{employeeName}, #{password}, #{status}, #{sex}, #{epType}, #{birthday}, #{age}, #{joinedDate}, #{joinedTime}, #{postCode}, #{address}, #{phoneNumber}, #{authority}, #{mailAdress}, #{insertDate}, #{updateDate})
    </insert>

    <update id="update" parameterType="com.softtech.entity.Employee">
        UPDATE employee
        SET employeeName=#{employeeName}, password=#{password}, status=#{status}, sex=#{sex}, epType=#{epType}, birthday=#{birthday}, age=#{age}, joinedDate=#{joinedDate}, joinedTime=#{joinedTime}, postCode=#{postCode}, address=#{address}, phoneNumber=#{phoneNumber}, authority=#{authority}, mailAdress=#{mailAdress}, insertDate=#{insertDate}, updateDate=#{updateDate}
        WHERE employeeID=#{employeeID}
    </update>

    <delete id="deleteById" parameterType="String">
        DELETE FROM employee WHERE employeeID = #{employeeID}
    </delete>
</mapper>

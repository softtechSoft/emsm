<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.softtech.mappers.SalaryAutomaticCalculationMapper">
    <!--相关子查询 找到最大主键ID对应的数据，查出最新的一条关于厚生保险率的数据-->
    <select id="getWelfarefeeData" resultType="com.softtech.entity.EmplyinsrateInfoEntity">
        select *
        from m_welfarefee
        where welfarefeeID = (select MAX(welfarefeeID)
                              from m_welfarefee)
    </select>

    <!--SQL计算年龄：根据员工ID-->
    <select id="getAgeByEmployeeID" parameterType="string" resultType="string">
        SELECT TIMESTAMPDIFF(YEAR, birthday, CURDATE())
        FROM employee
        WHERE employeeID = #{employeeID}
    </select>

    <!--根据年份查雇佣保险，只有 雇用保険労働者負担料率‰ 参与计算员工工资
直接根据当年时间计算即可-->
    <select id="getLaborBurdenRate" resultType="string">
        SELECT laborBurdenRate
        FROM m_emplyinsrate
        WHERE year = date_format(now(), '%Y')
    </select>

    <!--查询所得税，住民税，需要注意月份对应，因为不是每个月的住民税和所得税都一样，只能根据每个月单独算，所以是SELECT * 也就是把每个月数据全算出来然后java或者jsp一个个算-->
    <select id="getIncomeTax" resultType="com.softtech.entity.IncomeTaxInfoEntity">
        SELECT *
        FROM m_incometax m
                 LEFT JOIN employee e
                           ON m.employeeID = e.employeeID
        WHERE m.year = date_format(now(), '%Y')

    </select>

    <!--厚生健康保险，厚生年金 为 给料From<基本给<=给料To 的情况下查找对应的标准报酬，然后标准报酬乘保险率：注意和你的实际收入没关系，只和对应的那一档标准报酬有关-->
    <select id="getStandSalaryByEmployeeID" parameterType="string"
            resultType="com.softtech.entity.WelfarefeeInfoEntity">
        SELECT w.standSalary
        FROM m_welfarefee w
                 INNER JOIN m_basesalary b
                            ON b.baseSalary > w.salaryFrom AND b.baseSalary &lt;= w.salaryTo
        WHERE b.employeeID = #{employeeID}
    </select>

    <!--根据员工ID查他的基本给，残業単価和控除単価，残業単価和控除単価这俩必然有一个没有或者干脆都没有，在没有的情况下查出来的是0，不影响计算也就无所谓了-->
    <select id="getBaseSalaryAndOvertimePayAndInsufficienttimePayByEmployeeID" parameterType="string"
            resultType="com.softtech.entity.BaseSalaryInfoEntity">
        SELECT m.baseSalary, m.overtimePay, m.insufficienttimePay
        FROM m_basesalary m
                 INNER JOIN employee e
                            ON m.employeeID = e.employeeID AND m.employeeID = #{employeeID}
        WHERE date_format(now(), '%Y%m%d') > (SELECT MAX(m.updateDate)
                                              FROM m_basesalary)
    </select>

    <!--查交通费和出张费要求是最新的一条-->
    <select id="getTransportExpenseAndBusinessTripByEmployeeID" parameterType="string"
            resultType="com.softtech.entity.TransportEntity">
        SELECT t.transportExpense1, t.businessTrip
        FROM transport t
                 INNER JOIN employee e
                            ON t.employeeID = e.employeeID AND t.employeeID = #{employeeID}
        WHERE date_format(now(), '%Y%m%d') > (SELECT MAX(t.updateDate)
                                              FROM transport)
    </select>

    <!--根据画面的年份检索员工ID-->
    <select id="getEmployeeIDByYear" parameterType="string" resultType="string">
        select employeeID FROM m_incometax
        WHERE year = #{year}
    </select>
</mapper>
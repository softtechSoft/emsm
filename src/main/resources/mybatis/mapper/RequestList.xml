<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
          PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
          "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.softtech.mappers.RequestMapper">

	<select id="getRequestData" parameterType="map"
		resultType="com.softtech.entity.RequestEntity">
		SELECT
		e.employeeName AS employeeName,
		co.companyName AS
		companyName,
		c.lowerTime AS contractLowerTime,
		c.upperTime AS
		contractUpperTime,
		c.price AS price,
		c.lowerPrice AS lowerPrice,
		c.upperPrice AS upperPrice,
		w.workTime AS workTime,
		cl.transport AS
		transport,
		cl.businessTrip AS businessTrip,
		cl.specialClaim AS
		specialClaim,
		c.contractID AS contractID
		FROM
		workinfo w
		LEFT JOIN
		contract c ON c.contractID = w.contractID
		LEFT JOIN
		employee e ON
		e.employeeID = c.employeeID
		LEFT JOIN
		company co ON c.companyID =
		co.companyID
		LEFT JOIN
		claim cl ON cl.contractID = c.contractID AND
		w.workMonth = cl.claimMonth
		WHERE
		w.workMonth = #{month} AND
		cl.claimStatus = "2"
	</select>

	<select id="countByMonthAndType" parameterType="map"
		resultType="Integer">
		<choose>

			<when test="type == 'workTime'">
				SELECT COUNT(e.employeeID)
				FROM employee e
				LEFT JOIN
				contract c ON e.employeeID = c.employeeID
				LEFT JOIN workinfo w ON
				c.contractID = w.contractID AND w.workMonth =
				#{month}
				WHERE
				w.workTime IS NOT NULL
			</when>


			<when test="type == 'claimMonth'">
				SELECT COUNT(e.employeeID)
				FROM employee e
				LEFT JOIN
				contract ct ON e.employeeID = ct.employeeID
				LEFT JOIN claim c ON
				ct.contractID = c.contractID AND c.claimMonth =
				#{month}
				WHERE
				c.claimID IS NOT NULL
			</when>


			<when test="type == 'transport'">
				SELECT COUNT(e.employeeID)
				FROM employee e
				LEFT JOIN
				transport t ON e.employeeID = t.employeeID AND t.workMonth =
				#{month}
				WHERE t.transport IS NOT NULL
			</when>


			<when test="type == 'allEmployees'">
				SELECT COUNT(*)
				FROM employee
			</when>
		</choose>
	</select>
	<select id="countByMonthAndEmployee" parameterType="map"
		resultType="Integer">
		SELECT COUNT(*)
		FROM
		<choose>
			<when test="type == 'workTime'">
				workinfo
			</when>

			<when test="type == 'transport'">
				transport
			</when>

		</choose>
		WHERE
		<choose>
			<when test="type == 'workTime'">
				workMonth = #{month} AND employeeName =
				#{employeeName}
			</when>

			<when test="type == 'transport'">
				workMonth = #{month} AND employeeName =
				#{employeeName}
			</when>
		</choose>
	</select>


	<select id="countByMonthAndType1" parameterType="java.util.Map"
		resultType="int">
		SELECT COUNT(*)
		FROM ${type}
		WHERE workMonth = #{month}
	</select>

	<select id="findEmployeeNamesByMonth" parameterType="String"
		resultType="com.softtech.entity.Employee">
		SELECT DISTINCT e.employeeName
		FROM employee e
		LEFT JOIN
		contract c ON c.employeeID = e.employeeID
		LEFT JOIN workinfo w ON
		w.contractID = c.contractID AND w.workMonth =
		#{month}
		LEFT JOIN
		transport t ON t.employeeID = e.employeeID AND t.workMonth =
		#{month}
		WHERE (w.workTime IS NULL) OR (t.transport IS NULL)
	</select>


	<select id="getLatestYearMonth" resultType="String">
		SELECT
		MAX(claimMonth) AS maxClaimMonth
		FROM claim
	</select>

	<select id="getMaxClaimID" resultType="string">
		SELECT MAX(claimID) AS
		maxClaimID
		FROM claim
	</select>
	<select id="getDataForMonth" parameterType="String"
		resultType="com.softtech.entity.RequestEntity">
		SELECT
		w.contractID,
		w.workMonth AS claimMonth,
		w.workTime,
		c.upperTime,
		c.upperPrice,
		c.lowerTime,
		c.lowerPrice,
		c.price,
		t.transport,
		t.businessTrip
		FROM
		workinfo w
		JOIN
		contract c ON w.contractID
		= c.contractID
		LEFT JOIN
		transport t ON t.employeeID = c.employeeID AND
		t.workMonth = w.workMonth
		WHERE
		w.workMonth = #{month}
	</select>
	<insert id="insertClaimInfo"
		parameterType="com.softtech.entity.RequestEntity">
		INSERT INTO claim (
		claimID,
		contractID,
		claimMonth,
		workTime,
		exceTime,
		addpayOff,
		deficiTime,
		minusPayOff,
		transport,
		businessTrip,
		sum,
		taxRate,
		consumpTax,
		claimStatus

		) VALUES (
		#{claimID},
		#{contractID},
		#{claimMonth},
		#{workTime},
		#{exceTime},
		#{addpayOff},
		#{deficiTime},
		#{minusPayOff},
		#{transport},
		#{businessTrip},
		#{sum},
		#{taxRate},
		#{consumpTax},
		#{claimStatus}
		)
	</insert>

	<update id="updateTimeReportPath" parameterType="map">
		UPDATE contract
		SET timeReportPath = #{timeReportPath}
		WHERE contractID = #{contractID}
	</update>

	<select id="findTimeReportPathByContractID" resultType="String">
		SELECT
		timeReportPath
		FROM contract
		WHERE contractID = #{contractID}
	</select>

	<select id="findContractIDByWorkMonth" resultType="String">
		SELECT contractID
		FROM workinfo
		WHERE workMonth = #{workMonth}
	</select>



</mapper>

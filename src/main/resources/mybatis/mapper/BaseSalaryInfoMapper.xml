<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.softtech.mappers.BaseSalaryInfoMapper">
    <insert id="insertBaseSalaryInfo" parameterType="com.softtech.entity.BaseSalaryInfoEntity">
        insert
        into m_basesalary
        (baseSalaryID,
         employeeID,
         baseSalary,
         year,
         wkPeriodFrom,
         wkPeriodTo,
         overtimePay,
         insufficienttimePay,
         status,
         insertDate,
         updateDate )
        values (#{baseSalaryID},
                #{employeeID},
                #{baseSalary},
                #{year},
                #{wkPeriodFrom},
                #{wkPeriodTo},
                #{overtimePay},
                #{insufficienttimePay},
                #{status},
                date_format(now(), '%Y%m%d'),
                date_format(now(), '%Y%m%d') )

    </insert>
    <!-- 基本給リストの検索 -->
    <select id="getBaseSalaryInfoList" parameterType="string" resultType="com.softtech.entity.BaseSalaryInfoEntity">
        select 
	        b.*,
	        e.employeeName
	    from m_basesalary b
	    left join employee e on b.employeeID = e.employeeID
	    where b.employeeID = #{employeeID}
    </select>

    <!-- 基本給更新画面へのときの検索 -->

    <select id="getBaseSalaryInfo" parameterType="string" resultType="com.softtech.entity.BaseSalaryInfoEntity">
        select *
        from m_basesalary
        where baseSalaryID = #{baseSalaryID}
    </select>

    <!-- 基本給更新 -->
    <update id="updateBaseSalaryInfo" parameterType="com.softtech.entity.BaseSalaryInfoEntity">
        update
            m_basesalary
        set employeeID=#{employeeID},
            baseSalary=#{baseSalary},
            year=#{year},
            wkPeriodFrom=#{wkPeriodFrom},
            wkPeriodTo=#{wkPeriodTo},
             overtimePay=#{overtimePay},
            insufficienttimePay=#{insufficienttimePay},
            status=#{status},
            insertDate=date_format(now(), '%Y%m%d'),
            updateDate=date_format(now(), '%Y%m%d')
        where baseSalaryID = #{baseSalaryID}
    </update>
    <!--最大ID取得。-->
    <select id="getMaxBaseSalaryID" resultType="string">
        <!--基本給情報IDを取得する。-->
        select
        IFNULL(MAX(baseSalaryID), 'B00000')
        from
        m_basesalary ct

    </select>
    
	<select id="getBaseSalaryInfoByCondition" resultType="com.softtech.entity.BaseSalaryInfoEntity">
	    SELECT 
	        b.*,
	        e.employeeName
	    FROM m_basesalary b
	    LEFT JOIN employee e ON b.employeeID = e.employeeID
	    WHERE 1=1
	    <if test="employeeID != null and employeeID != ''">
	        AND b.employeeID = #{employeeID}
	    </if>
	    <if test="year != null and year != ''">
	        AND b.year = #{year}
	    </if>
	    ORDER BY b.employeeID, b.year DESC
	</select>
	
	<select id="getDistinctYears" resultType="string">
	    SELECT DISTINCT year
	    FROM m_basesalary
	    WHERE year IS NOT NULL
	    ORDER BY year DESC
	</select>
</mapper>